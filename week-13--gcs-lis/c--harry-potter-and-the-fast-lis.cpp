/*
# Задача C. Гарри Поттер и быстрая НВП

**Ограничение времени**: 1 секунда
**Ограничение памяти**: 64.8 Мб
**Ввод**: стандартный ввод или input.txt
**Вывод**: стандартный вывод или output.txt

"У меня тут получается два Нептуна," - сказал Гарри через некоторое время, мрачно глядя на свой лист пергамента. "Такого не может быть, верно?"

"А-а-а-а-ах," - прошелестел Рон, изображая таинственный шепот профессора Трелони. "Когда в небе появляются два Нептуна, мой милый, это верный знак, что рождается маленькая зануда в очках…"

Дана последовательность, требуется найти длину её НВП.

## Формат ввода

В первой строке входных данных задано число N - длина последовательности (1 ≤ N ≤ 10^5). Во второй строке задается сама последовательность (разделитель - пробел). Элементы последовательности - целые числа, не превосходящие 100000 по модулю.

## Формат вывода

Длина НВП.

## Пример

### Ввод
```
10
-2 1 2 0 0 -2 -2 -2 1 -1
```
### Вывод
```
3
```
 */
#include <climits>
#include <iostream>

int main() {
  int n;
  std::cin >> n;
  auto arr = new int[n];
  for (int i = 0; i < n; ++i) {
    std::cin >> arr[i];
  }
  auto dp = new int[n + 1];
  dp[0] = INT_MIN;
  for (int i = 1; i < n + 1; ++i) {
    dp[i] = INT_MAX;
  }
  for (int i = 0; i < n; i++) {
    int left = -1;
    int right = n;
    while (left < right - 1) {
      int mid = (left + right) / 2;
      if (dp[mid] < arr[i]) {
        left = mid;
      } else {
        right = mid;
      }
    }
    if (dp[right - 1] < arr[i] && arr[i] < dp[right]) {
      dp[right] = arr[i];
    }
  }
  int counter = 0;
  for (int i = 1; i < n + 1; i++) {
    if (dp[i] != INT_MAX && dp[i] != INT_MIN) {
      counter++;
    }
  }
  std::cout << counter;
  delete[] dp;
  delete[] arr;
  return 0;
}
