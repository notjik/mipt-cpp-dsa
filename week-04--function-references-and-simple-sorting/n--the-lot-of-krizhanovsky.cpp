/*
 * N. Жребий Крижановского
Ограничение времени	1 секунда
Ограничение памяти	256Mb
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
Петя играет с друзьями в игру, которую иногда называют «Жребий Крижановского». Правила игры следующие: в каждом туре каждый игрок загадывает произвольное натуральное число. После этого игрок, загадавший минимальное число, которое не повторяется, выигрывает в этом туре, причем его выигрыш равен этому числу. Например, если играют 6 человек и были загаданы числа 3, 2, 1, 1, 4 и 2, то выиграл первый игрок, причем его выигрыш равен 3. Если все загаданные числа повторяются, то тур считается ничейным и никто баллов не получает.
Общий выигрыш игрока за игру равен сумме баллов за все сыгранные туры.
Петя с друзьями при игре просто называют по очереди загаданные ими числа, а потом определяют, кто выиграл, и подсчитывают баллы. Однако при таком формате игры в принципе можно сжульничать, не загадывая число заранее, а, уже зная числа, названные предыдущими игроками, выбрать себе оптимальное «загаданное» число. Этим и пользуется Петя. Он называет число последним и старается выбрать число так, чтобы максимизировать свой выигрыш.
Идет последний тур игры. Известны очки всех игроков перед этим туром и названные игроками числа. Выясните, какое число следует назвать Пете, чтобы по результатам игры у как можно большего числа игроков количество баллов было меньше, чем у него. Если таких чисел несколько, то Петя хочет назвать минимальное возможное.

Формат ввода
В первой строке вводится число
n — количество игроков (2≤n≤100).
Вторая строка содержит n чисел - баллы игроков перед последним туром (неотрицательные целые числа, не большие 100). Баллы перечислены в том порядке, в котором игроки обычно называют числа (то есть Петины баллы указаны последними).
В третьей строке задано n−1 число - числа, названные игроками в последнем туре (числа не превышают 100), в том порядке, в котором они их называли.

Формат вывода
Выведите число, которое следует назвать Пете.
Пример 1
Ввод
6
0 0 0 0 0 0
2 3 4 5 6
Вывод
1

Пример 2
Ввод
6
8 3 12 5 0 9
2 1 3 1 4
Вывод
2

Примечания
Во втором примере Петя не может выиграть в последнем туре. Однако, назвав число 2, Петя не позволяет выиграть первому игроку, и, тем самым, остается вторым по итогам всей игры. У четырех игроков баллы меньше, чем у Пети.
 */
#include <iostream>

int Check(int x, int *&scores, int *&called, int *c_global, const int &n) {
  int *c = new int[102];
  for (int i = 0; i < 102; i++) {
    c[i] = c_global[i];
  }
  int *last = new int[n];
  c[x] += 1;
  called[n - 1] = x;
  for (int i = 0; i < n; i++) {
    last[i] = scores[i];
  }
  bool flag = true;
  for (int i = 0; i < 102; i++) {
    if (flag) {
      if (c[i] == 1) {
        for (int j = 0; j < n; j++) {
          if (called[j] == i) {
            last[j] += called[j];
            flag = false;
            break;
          }
        }
      }
    } else {
      break;
    }
  }
  int h = last[n - 1];
  int top = 1, count_top = 0;
  for (int i = 0; i < n - 1; i++) {
    if (last[i] > h) {
      top++;
    } else if (last[i] == h) {
      count_top++;
    }
  }
  delete[] c;
  delete[] last;
  return top + count_top;
}

int main() {
  int n;
  std::cin >> n;
  int *scores = new int[n];
  int *called = new int[n];
  called[n - 1] = 0;
  for (int i = 0; i < n; i++) {
    std::cin >> scores[i];
  }

  int c_global[102];
  for (int i = 0; i < 102; i++) {
    c_global[i] = 0;
  }

  for (int i = 0; i < n - 1; i++) {
    int a;
    std::cin >> a;
    called[i] = a;
    c_global[a] += 1;
  }
  int top = n + 1, res = -1;
  for (int i = 1; i < 102; i++) {
    int check = Check(i, scores, called, c_global, n);
    if (check < top) {
      top = check;
      res = i;
    }
  }
  std::cout << res << '\n';
  delete[] scores;
  delete[] called;
  return 0;
}
