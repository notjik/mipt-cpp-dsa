cmake_minimum_required(VERSION 3.26)
project(susu_mipt_cpp)

set(CMAKE_CXX_STANDARD 17)

# [week-1]
#add_executable(susu_mipt_cpp week-1--introduction/a--hello-world.cpp)
#add_executable(susu_mipt_cpp week-1--introduction/b--hypotenuse.cpp)
#add_executable(susu_mipt_cpp week-1--introduction/c--next-and-previous.cpp)
#add_executable(susu_mipt_cpp week-1--introduction/d--mrr.cpp)
#add_executable(susu_mipt_cpp week-1--introduction/e--sum-of-digits.cpp)
#add_executable(susu_mipt_cpp week-1--introduction/f--next-even.cpp)
#add_executable(susu_mipt_cpp week-1--introduction/g--electronic-clock.cpp)
#add_executable(susu_mipt_cpp week-1--introduction/h--the-difference-in-times.cpp)
#add_executable(susu_mipt_cpp week-1--introduction/i--snail.cpp)
#add_executable(susu_mipt_cpp week-1--introduction/j--check-divisibility.cpp)
#add_executable(susu_mipt_cpp week-1--introduction/k--maximum-of-two-numbers.cpp)
#add_executable(susu_mipt_cpp week-1--introduction/l--angular-number.cpp)
#add_executable(susu_mipt_cpp week-1--introduction/m--the-leap-year.cpp)


# [week-2]
#add_executable(susu_mipt_cpp week-2--operators/a--maximum-of-three-numbers.cpp)
#add_executable(susu_mipt_cpp week-2--operators/b--chocolate.cpp)
#add_executable(susu_mipt_cpp week-2--operators/c--a-complex-equation.cpp)
#add_executable(susu_mipt_cpp week-2--operators/d--even-numbers.cpp)
#add_executable(susu_mipt_cpp week-2--operators/e--the-minimum-divider.cpp)
#add_executable(susu_mipt_cpp week-2--operators/f--the-sum-of-numbers.cpp)
#add_executable(susu_mipt_cpp week-2--operators/g--the-second-maximum-2.cpp)
#add_executable(susu_mipt_cpp week-2--operators/h--the-sum-of-the-numbers-of-the-number.cpp)
#add_executable(susu_mipt_cpp week-2--operators/i--nth-number-fibonacchi.cpp)
#add_executable(susu_mipt_cpp week-2--operators/j--cutting-into-squares.cpp)
#add_executable(susu_mipt_cpp week-2--operators/k--reducing-the-fractions.cpp)
#add_executable(susu_mipt_cpp week-2--operators/l--side-diagonal.cpp)
#add_executable(susu_mipt_cpp week-2--operators/m--filling-with-diagonals.cpp)


# [week-3]
#add_executable(susu_mipt_cpp week-3--arrays-pointers-binsearch-gcd/a--side-diagonal-using-arrays.cpp)
#add_executable(susu_mipt_cpp week-3--arrays-pointers-binsearch-gcd/b--competition.cpp)
#add_executable(susu_mipt_cpp week-3--arrays-pointers-binsearch-gcd/c--pascal-triangle.cpp)
#add_executable(susu_mipt_cpp week-3--arrays-pointers-binsearch-gcd/d--filling-with-diagonals-using-arrays.cpp)
#add_executable(susu_mipt_cpp week-3--arrays-pointers-binsearch-gcd/e--sapper.cpp)
#add_executable(susu_mipt_cpp week-3--arrays-pointers-binsearch-gcd/f--spiral.cpp)
#add_executable(susu_mipt_cpp week-3--arrays-pointers-binsearch-gcd/g--binary-search.cpp)
#add_executable(susu_mipt_cpp week-3--arrays-pointers-binsearch-gcd/h--gcd-and-lcm.cpp)


# [week-4]
#add_executable(susu_mipt_cpp week-4--function-references-and-simple-sorting/a--nod-n-numbers-with-a-subprogram.cpp)
#add_executable(susu_mipt_cpp week-4--function-references-and-simple-sorting/b--check-whether-the-symbol-is-the-number.cpp)
#add_executable(susu_mipt_cpp week-4--function-references-and-simple-sorting/c--check-for-simplicity.cpp)
#add_executable(susu_mipt_cpp week-4--function-references-and-simple-sorting/d--the-perimeter-of-the-triangle.cpp)
#add_executable(susu_mipt_cpp week-4--function-references-and-simple-sorting/e--calculation-of-numbers.cpp)
#add_executable(susu_mipt_cpp week-4--function-references-and-simple-sorting/f--selection-sort.cpp)
#add_executable(susu_mipt_cpp week-4--function-references-and-simple-sorting/g--insert-a-number.cpp)
#add_executable(susu_mipt_cpp week-4--function-references-and-simple-sorting/h--insertion-sort.cpp)
#add_executable(susu_mipt_cpp week-4--function-references-and-simple-sorting/i--bubble-sort.cpp)
#add_executable(susu_mipt_cpp week-4--function-references-and-simple-sorting/j--bubble-sort--numbers-of-exchanges.cpp)
#add_executable(susu_mipt_cpp week-4--function-references-and-simple-sorting/k--expedition.cpp)
#add_executable(susu_mipt_cpp week-4--function-references-and-simple-sorting/l--discounts.cpp)
#add_executable(susu_mipt_cpp week-4--function-references-and-simple-sorting/m--necklace.cpp)
#add_executable(susu_mipt_cpp week-4--function-references-and-simple-sorting/n--the-lot-of-krizhanovsky.cpp)


# [week-5]
#add_executable(susu_mipt_cpp week-5--recursion-merge-and-mergesort/a--addition-without-addition.cpp)
#add_executable(susu_mipt_cpp week-5--recursion-merge-and-mergesort/b--no-arrays.cpp)
#add_executable(susu_mipt_cpp week-5--recursion-merge-and-mergesort/c--fast-degree-expansion.cpp)
#add_executable(susu_mipt_cpp week-5--recursion-merge-and-mergesort/d--number-of-calls-of-the-fibonacci-function.cpp)
#add_executable(susu_mipt_cpp week-5--recursion-merge-and-mergesort/e--sequence.cpp)
#add_executable(susu_mipt_cpp week-5--recursion-merge-and-mergesort/f--merge-sort.cpp)

# [week-6]
#add_executable(susu_mipt_cpp week-6--quicksort/a--quick-sort-and-quote-from-dead-souls.cpp)
#add_executable(susu_mipt_cpp week-6--quicksort/b--applicants.cpp)
#add_executable(susu_mipt_cpp week-6--quicksort/c--top-three.cpp)
#add_executable(susu_mipt_cpp week-6--quicksort/d--chimneysweep.cpp)

# [week-7]
#add_executable(susu_mipt_cpp week-7--heap-and-heapsort/a--heap.cpp)
add_executable(susu_mipt_cpp week-7--heap-and-heapsort/d--counting-sort.cpp)

# [week-8]
#add_executable(susu_mipt_cpp week-8--dynamic-programming/a--nth-number-fibonacci.cpp)
#add_executable(susu_mipt_cpp week-8--dynamic-programming/d--atm.cpp)
#add_executable(susu_mipt_cpp week-8--dynamic-programming/f--optimal-theft.cpp)
#add_executable(susu_mipt_cpp week-8--dynamic-programming/g--the-backpack-problem.cpp)