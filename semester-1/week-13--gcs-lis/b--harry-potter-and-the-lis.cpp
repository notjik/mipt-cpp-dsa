/*
# Задача B. Гарри Поттер и НВП

**Ограничение времени**: 0.2 секунд
**Ограничение памяти**: 64.8 Мб
**Ввод**: стандартный ввод или input.txt
**Вывод**: стандартный вывод или output.txt

"Ха, жалкая грязнокровка! Никогда не видела волшебных потолков и теперь глазеет на них," - усмехается чистокровный парень, пока первокурсники идут в колонке к Распределяющей Шляпе.

"Зато я видела мемы, в отличие от тебя," - отвечает магглорождённая волшебница.

Дана последовательность, требуется найти её наибольшую возрастающую подпоследовательность.

## Формат ввода

В первой строке входных данных задано число N - длина последовательности (1 ≤ N ≤ 1000). Во второй строке задается сама последовательность (разделитель - пробел). Элементы последовательности - целые числа, не превосходящие 10000 по модулю.

## Формат вывода

Требуется вывести наибольшую возрастающую подпоследовательность данной последовательности. Если таких подпоследовательностей несколько, необходимо вывести одну (любую) из них.

## Пример

### Ввод
```
10
4 8 2 6 2 10 6 29 58 9
```
### Вывод
```
4 8 10 29 58
```
 */
#include <iostream>

int main() {
  int n;
  std::cin >> n;
  auto arr = new int[n];
  for (int i = 0; i < n; i++) {
    std::cin >> arr[i];
  }
  auto dp = new int[n];
  auto prev = new int[n];
  for (int i = 0; i < n; i++) {
    dp[i] = 1;
    prev[i] = -1;
    for (int j = 0; j < i; j++) {
      if ((arr[j] < arr[i]) && (dp[j] + 1 > dp[i])) {
        dp[i] = dp[j] + 1;
        prev[i] = j;
      }
    }
  }
  int len = 0;
  int index = 0;
  for (int i = 0; i < n; i++) {
    if (dp[i] > len) {
      len = dp[i];
      index = i;
    }
  }
  auto res = new int[len];
  int count = len - 1;
  while (index != -1) {
    res[count] = arr[index];
    index = prev[index];
    count--;
  }
  for (int i = 0; i < len; i++) {
    std::cout << res[i] << " ";
  }
  delete[] arr;
  delete[] dp;
  delete[] prev;
  delete[] res;
}
